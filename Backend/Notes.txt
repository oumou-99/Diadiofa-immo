const router = require("express").Router();
const { User, validate } = require("../models/user");
const bcrypt = require("bcrypt");
const jwt = require("jsonwebtoken");

//Register
router.post("/", async (req, res) => {
  const { error } = validate(req.body);
  if (error) return res.status(400).send(error.details[0].message);

  const user = await User.findOne({ email: req.body.email });

  if (user) res.status(401).send("User already registered");
  try {
    let newUser = new User({
      prenom: req.body.prenom,
      nom: req.body.nom,
      numero: req.body.numero,
      email: req.body.email,
      password: req.body.password,
    });
    const salt = await bcrypt.genSalt(10);
    newUser.password = await bcrypt.hash(newUser.password, salt);

    const result = await newUser.save();
    res.status(200).send(result);
    console.log(result);
  } catch (error) {
    res.status(500).send(error);
  }
  const token = user.generateAuthToken();
  res.header("x-auth-token", token).send({
    _id: newUser._id,
    prenom: newUser.prenom,
    nom: newUser.nom,
    numero: newUser.numero,
    email: newUser.email,
  });
});

// router.post("/login", async (req, res) => {
//   try {
//     const admin = await Admin.findOne({ email: req.body.email });

//     !admin && res.status(401).send("Invalid username or password ;( ");

//     const hashedPassword = CryptoJS.AES.decrypt(
//       admin.password,
//       process.env.PASSWORD_SECRET
//     ).toString(CryptoJS.enc.Utf8);

//     hashedPassword !== req.body.password &&
//       res.status(401).send("Invalid username or password  ;( ");

//     const accessToken = jwt.sign(
//       {
//         id: admin._id,
//         isAdmin: admin.isAdmin,
//       },
//       process.env.JWT_SECRET,
//       { expiresIn: "3d" }
//     );

//     const { password, ...others } = admin._doc;

//     //store("admin", { ...others, accessToken });
//     //console.log(store("admin"));

//     res.status(200).send({ ...others, accessToken });
//   } catch (error) {
//     res.status(500).send(error);
//   }
// });

module.exports = router;
